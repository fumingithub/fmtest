package net.jqsoft.common.util;import java.io.BufferedReader;import java.io.File;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import org.apache.commons.logging.Log;import org.apache.commons.logging.LogFactory;import org.apache.struts2.ServletActionContext;import org.zcframework.core.utils.context.ServiceLocator;import com.artofsolving.jodconverter.DocumentConverter;import com.artofsolving.jodconverter.openoffice.connection.OpenOfficeConnection;import com.artofsolving.jodconverter.openoffice.connection.SocketOpenOfficeConnection;import com.artofsolving.jodconverter.openoffice.converter.OpenOfficeDocumentConverter; /** * @author: yinzh * @date: 2015/5/26  * @desc: swf转换器 */public class FileConverterToSWF {		/**	 * 日志对象	 */	private static final Log log = LogFactory.getLog(FileConverterToSWF.class);	private static final String FILE_PATH_ROOT = CommonUtil.getProperties("config.properties", "file_path_root");	private static final String swftools_xpdf = CommonUtil.getProperties("config.properties", "swftools_xpdf");	private static final String start_soffice_command = CommonUtil.getProperties("config.properties", "start_soffice_command");	private static FileConverterToSWF fileConverterToSWF;		/**	 * pdf文件后缀	 */	private static final String PDFFILETYPE=".pdf"; 		/**	 * swf文件后缀	 */	private static final String SWFFILETYPE=".swf";		private static final String SWF ="swf";	/**	 * swf文件的路径	 */	private String swfPath;		/**	 * pdf转换成swf工具路径	 */	private String pdf2swfexePath;		/**	 * jpg转换成swf工具路径 	 */	private String jpp2swfexePath;		/**	 * 启动soffice工具路径	 */	private String sofficePath;		/**	 * 获取单例 	 * @author yinzh	 * @param	*/	public static FileConverterToSWF getInstance(){		if (null == fileConverterToSWF){			synchronized (FileConverterToSWF.class) {				if(null == fileConverterToSWF){					fileConverterToSWF =  new FileConverterToSWF();				}			}		}		return fileConverterToSWF;	}		/**	 * 构造器	 */	private FileConverterToSWF() {		init();	}	/**	 * 转换器初始化	 * @author yinzh	 * @param	*/	private void init() {		/*IConfigService sysConfigService = (IConfigService) ServiceLocator.getBean("sysConfigService");		this.swfPath =ServletActionContext.getServletContext().getRealPath(SWF);		this.jpp2swfexePath = sysConfigService.getValueByCode(SystemConstants.JPP_2SWFEXEPATH_CODE,null);		this.pdf2swfexePath = sysConfigService.getValueByCode(SystemConstants.PDF_2SWFEXEPATH_CODE,null);		this.sofficePath = sysConfigService.getValueByCode(SystemConstants.SOFFICE_PATH_CODE,null);*/	}		/**	     * doc文件转换成pdf 该方法目前系统中没有使用，保留防止有机会有到，使用	     * 该方法操作系统中需要安装openOffice插件	     * @author yinzh	     * @param	     */	public  String doc2pdf(String filePath) {		File docFile = new File(FILE_PATH_ROOT + filePath);		String fileName = filePath.substring(0,filePath.lastIndexOf("."));		File pdfFile = new File(FILE_PATH_ROOT + fileName + PDFFILETYPE);		// 判断文件是否存在		if (docFile.exists()) {			// 获取文件名称，创建pdf对象			OpenOfficeConnection conn = null;			Process p = null;			if (!pdfFile.exists()) {				try {					p = startSoffice(sofficePath);					conn = new SocketOpenOfficeConnection(8100);					conn.connect();					DocumentConverter converter =							new OpenOfficeDocumentConverter(conn);					//转换成pdf					converter.convert(docFile, pdfFile);					log.info("****pdf转换成功PDF输出" + pdfFile.getPath() + "****");				} catch (java.net.ConnectException e) {					log.info("****swf转换异常openoffice服务未启动****");				} catch (com.artofsolving.jodconverter.openoffice.connection.OpenOfficeException e) {					log.info("****swf转换器异常读取转换文件失败****");				} catch (Exception e) {					log.info(".doc文件转换成pdf文件失败");				}finally{					if(conn != null){						conn.disconnect();					}					shutDownSoffice(p);				}			} else {				log.info("****已经转换为pdf不需要再进行转化****");			}		} else {			log.info("***swf转换器异常，需要转换的文档不存在,无法转换***");		}		return fileName + PDFFILETYPE;	} 		/**	 * 启动soffice服务	 * @author yinzh	 * @param	*/	public synchronized Process startSoffice(String sofficePath) {		Runtime r = Runtime.getRuntime();		Process p = null;		try {			p = r.exec(sofficePath+start_soffice_command);			log.info("***soffice服务启动成功***");		} catch (IOException e) {			log.info("***soffice服务启动失败***");			log.info(e);		}		return p;	}		/**	 * 关闭soffice服务	 * @author yinzh	 * @param	*/	public void shutDownSoffice(Process p){		if(p !=null){			p.destroy();			log.info("***soffice服务关闭成功***");		}	}		/**	 * pdf文件转换成swf	 * @author yinzh	 * @param	*/	public  String  pdfOrJpg2swf(String filePath) {		Runtime r = Runtime.getRuntime();		File file = new File(FILE_PATH_ROOT + filePath);		String fileType = filePath.substring(filePath.lastIndexOf("."));		String exePath = "";		// 判断是pdf还是jpg活jpeg文件（目前系统中只支持这两种文件）		if (PDFFILETYPE.equals(fileType)) {			exePath = pdf2swfexePath;		} else {			exePath = jpp2swfexePath;		}		File swfFile = new File(FILE_PATH_ROOT				+ filePath.substring(0, filePath.lastIndexOf("."))				+ SWFFILETYPE);		Process p = null;		if (swfFile.exists()) {			log.info("****swf已存在，删除源文件后转换****");			swfFile.delete();		}			if (file.exists()) {				try {					p = r.exec(exePath +" "+ file.getPath() + " -o " + swfFile.getPath() + " -T 9 -s languagedir="+swftools_xpdf);					log.info(loadStream(p.getInputStream()));				} catch (Exception e) {					log.info(e);					log.info("***转换器转换文件出错***");				} finally {					if (p != null) {						try {							p.getInputStream().close();						} catch (IOException e) {							e.printStackTrace();						}						p.destroy();					}				}			} else {				log.info("****"+fileType+"文件不存在,无法转换****");			}		return swfFile.getName();	}	/**	 * 读取转换信息	 * @author yinzh	 * @param	*/	private String loadStream(InputStream in) throws IOException {		int ptr = 0;		BufferedReader reader = new BufferedReader(new InputStreamReader(in));		StringBuilder buffer = new StringBuilder();		while ((ptr = reader.read()) != -1) {			buffer.append((char) ptr);		}		return buffer.toString();	}}